/** @file config.h */

/** @defgroup general General */

/** @def AJSON_VERSION_MAJOR
@ingroup general
@brief The major version of the ajson library headers.
@see ajson_version_major
*/

/** @def AJSON_VERSION_MINOR
@ingroup general
@brief The minor version of the ajson library headers.
@see ajson_version_minor
*/

/** @def AJSON_VERSION_PATCH
@ingroup general
@brief The patch version of the ajson library headers.
@see ajson_version_patch
*/

/** @def AJSON_VERSION_STRING
@ingroup general
@brief The version string of the ajson library headers.
@see ajson_version
*/

/** @def AJSON_USE_GNUC_ADDRESS_FROM_LABEL
@ingroup general
@brief Only defined if the GNUC address from label extension is used in the ajson library.
*/

/** @file ajson.h */

/** @def AJSON_VERSION_CHECK()
@ingroup general
@brief Check if the version of the used ajson library is compatible to the version of the used headers.
*/

/** @def AJSON_STACK_SIZE
@ingroup general
@brief Initial stack size for parsing recursive data structures.
*/

/** @var AJSON_ENC_LATIN1
@ingroup general
@brief Latin-1/ISO-8859-1
*/

/** @var AJSON_ENC_UTF8
@ingroup general
@brief UTF-8
*/

/** @fn const char *ajson_version()
@ingroup general
@brief Get ajson version string.

Get the version string of the ajson library. This might be different to ::AJSON_VERSION_STRING
if the library version doesn't match the version of the used headers.

@return The version string. E.g.: @c "1.0.0"
*/

/** @fn unsigned int ajson_version_major()
@ingroup general
@brief Get ajson major version.

Get the major version of the ajson library. This might be different to ::AJSON_VERSION_MAJOR
if the library version doesn't match the version of the used headers.

@return The major version.
*/

/** @fn unsigned int ajson_version_minor()
@ingroup general
@brief Get ajson minor version.

Get the minor version of the ajson library. This might be different to ::AJSON_VERSION_MINOR
if the library version doesn't match the version of the used headers.

@return The minor version.
*/

/** @fn unsigned int ajson_version_patch()
@ingroup general
@brief Get ajson patch version.

Get the patch version of the ajson library. This might be different to ::AJSON_VERSION_PATCH
if the library version doesn't match the version of the used headers.

@return The patch version.
*/

/** @fn int ajson_decode_utf8(const unsigned char buffer[], size_t size, uint32_t *codepoint)
@ingroup general
@brief Decode a unicode code point from UTF-8 data.

### Errors

 - @c EINVAL Buffer size is 0 or UTF-8 encoded codepoint is truncated.
 - @c EILSEQ Illegal UTF-8 byte sequence found.

@return On success the number of bytes of buffer used, on error @c -error_index @c - @c 1 .
*/
